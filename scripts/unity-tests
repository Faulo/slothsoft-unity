#!/usr/bin/env php
<?php
declare(strict_types = 1);

use Slothsoft\Core\FileSystem;
use Slothsoft\Farah\FarahUrl\FarahUrl;
use Slothsoft\Farah\FarahUrl\FarahUrlArguments;
use Slothsoft\Unity\UnityHub;
use Slothsoft\Unity\UnityProjectInfo;

array_shift($_SERVER['argv']);
$_SERVER['argc'] --;

include $_composer_autoload_path ?? __DIR__ . '/../vendor/autoload.php';

if ($_SERVER['argc'] < 2) {
    echo <<<'EOT'
    Run all tests inside a Unity project.
        
    Usage:
    composer exec unity-tests "path/to/project" [EditMode|PlayMode|Platform]
            
    EOT;
    return;
}

$args = $_SERVER['argv'];

$workspace = array_shift($args);
$modes = $args;

UnityHub::setLoggingEnabled(true);

$testsUrl = FarahUrl::createFromReference('farah://slothsoft@unity/project/tests-junit');

$reportDirectory = $workspace . DIRECTORY_SEPARATOR . 'test-reports';

FileSystem::removeDir($reportDirectory, true);
if (! is_dir($reportDirectory)) {
    mkdir($reportDirectory, 0777, true);
}

foreach (UnityProjectInfo::findAll($workspace) as $project) {
    $name = FileSystem::filenameSanitize($project->settings['productName']);
    foreach ($modes as $mode) {
        $reportFile = "{$name}.{$mode}.xml";
        $testsArgs = FarahUrlArguments::createFromValueList([
            'workspace' => $project->path,
            'mode' => $mode
        ]);
        $url = $testsUrl->withQueryArguments($testsArgs);
        copy((string) $url, $reportDirectory . DIRECTORY_SEPARATOR . $reportFile);
    }
}
